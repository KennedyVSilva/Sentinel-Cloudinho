@model MeuAppSeguranca.Models.SecurityTestResult

<!DOCTYPE html>
<html>
<head>
    <title>Testes de Segurança</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.9.1/dist/chart.min.js"></script>
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; }
        canvas { max-width: 600px; }
        .error { color: red; }
    </style>
</head>
<body>
    <h1>Testes de Segurança</h1>
    <form method="post" action="/Security/RunTests">
        <label for="targetUrl">URL do Alvo:</label>
        <input type="url" id="targetUrl" name="targetUrl" required placeholder="https://example.com" />
        <button type="submit">Executar Testes</button>
    </form>

    @if (Model != null)
    {
        <h2>Resultados</h2>
        @if (!string.IsNullOrEmpty(Model.PortScanResult) && Model.PortScanResult.Contains("Erro"))
        {
            <p class="error"><strong>Port Scanning:</strong> @Model.PortScanResult</p>
        }
        else
        {
            <p><strong>Port Scanning:</strong> @Model.PortScanResult</p>
        }
        <!-- (Repetir o padrão para outros resultados) -->
        @if (!string.IsNullOrEmpty(Model.WebScanResult) && Model.WebScanResult.Contains("Erro"))
        {
            <p class="error"><strong>Análise Web:</strong> @Model.WebScanResult</p>
        }
        else
        {
            <p><strong>Análise Web:</strong> @Model.WebScanResult</p>
        }
        @if (!string.IsNullOrEmpty(Model.SqlInjectionResult) && Model.SqlInjectionResult.Contains("Erro"))
        {
            <p class="error"><strong>SQL Injection:</strong> @Model.SqlInjectionResult</p>
        }
        else
        {
            <p><strong>SQL Injection:</strong> @Model.SqlInjectionResult</p>
        }
        @if (!string.IsNullOrEmpty(Model.XssResult) && Model.XssResult.Contains("Erro"))
        {
            <p class="error"><strong>XSS:</strong> @Model.XssResult</p>
        }
        else
        {
            <p><strong>XSS:</strong> @Model.XssResult</p>
        }
        @if (!string.IsNullOrEmpty(Model.SslResult) && Model.SslResult.Contains("Erro"))
        {
            <p class="error"><strong>SSL/TLS:</strong> @Model.SslResult</p>
        }
        else
        {
            <p><strong>SSL/TLS:</strong> @Model.SslResult</p>
        }
        @if (!string.IsNullOrEmpty(Model.DnsResult) && Model.DnsResult.Contains("Erro"))
        {
            <p class="error"><strong>DNS:</strong> @Model.DnsResult</p>
        }
        else
        {
            <p><strong>DNS:</strong> @Model.DnsResult</p>
        }
        @if (!string.IsNullOrEmpty(Model.TraversalResult) && Model.TraversalResult.Contains("Erro"))
        {
            <p class="error"><strong>Directory Traversal:</strong> @Model.TraversalResult</p>
        }
        else
        {
            <p><strong>Directory Traversal:</strong> @Model.TraversalResult</p>
        }
        @if (!string.IsNullOrEmpty(Model.HeaderResult) && Model.HeaderResult.Contains("Erro"))
        {
            <p class="error"><strong>Headers:</strong> @Model.HeaderResult</p>
        }
        else
        {
            <p><strong>Headers:</strong> @Model.HeaderResult</p>
        }

        <canvas id="securityChart"></canvas>
        <script>
            var ctx = document.getElementById('securityChart').getContext('2d');
            var chart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: ['Port Scan', 'Web Scan', 'SQL Injection', 'XSS', 'SSL/TLS', 'DNS', 'Traversal', 'Headers'],
                    datasets: [{
                        label: 'Status (1 = Seguro, 0 = Inseguro)',
                        data: [
							@(Model.PortScanResult?.Contains("Erro") == false && Model.PortScanResult?.Contains("simulado") == true ? 1 : 0),
							@(Model.WebScanResult?.Contains("Erro") == false && Model.WebScanResult?.Contains("Nenhuma") == true ? 1 : 0),
							@(Model.SqlInjectionResult?.Contains("Erro") == false && Model.SqlInjectionResult?.Contains("Nenhuma") == true ? 1 : 0),
							@(Model.XssResult?.Contains("Erro") == false && Model.XssResult?.Contains("Nenhuma") == true ? 1 : 0),
							@(Model.SslResult?.Contains("Erro") == false && Model.SslResult?.Contains("Grau A") == true ? 1 : 0),
							@(Model.DnsResult?.Contains("Erro") == false ? 1 : 0),
							@(Model.TraversalResult?.Contains("Erro") == false && Model.TraversalResult?.Contains("Nenhuma") == true ? 1 : 0),
							@(Model.HeaderResult?.Contains("Erro") == false && Model.HeaderResult?.Contains("seguros") == true ? 1 : 0)
						],

                        backgroundColor: 'rgba(75, 192, 192, 0.2)',
                        borderColor: 'rgba(75, 192, 192, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: { beginAtZero: true, max: 1 }
                    }
                }
            });
        </script>
    }
</body>
</html>